@page "/"

<PageTitle>Todo</PageTitle>

<h1>Todo (@ToDoneCount)</h1>

<div>
    <form @onsubmit=AddTodo>
        <input placeholder="Something todo" @bind="newTodo" @bind:after="ValidateTodo" />
        <button>Add todo</button>
        <span>@errorMessage</span>
    </form>
</div>
<div>
    <button @onclick="ClearDoneTodo" disabled="@(DoneCount <= 0)">Clear done</button>
    <button @onclick="ClearAllTodo" disabled="@(todos.Count <= 0)">Clear all</button>
</div>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" />
            <button @onclick="@(() => RemoveTodo(todo))">Remove</button>
        </li>
    }
</ul>

@code {

    private string newTodo = String.Empty;
    private string errorMessage = String.Empty;
    private List<TodoItem> todos = new();

    private int DoneCount => todos.Count(todo => todo.IsDone);
    private int ToDoneCount => todos.Count(todo => !todo.IsDone);

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            errorMessage = string.Empty;
            todos.Add(new TodoItem { Title = newTodo });
            //newTodo = string.Empty;
        }
        else
        {
            errorMessage = "Todo is empty";
        }
    }

    private void ValidateTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
            errorMessage = string.Empty;
    }

    private void ClearAllTodo()
    {
        todos.Clear();
    }

    private void ClearDoneTodo()
    {
        todos.RemoveAll(todo => todo.IsDone);
    }

    private void RemoveTodo(TodoItem todo)
    {
        todos.Remove(todo);
    }
}
